name: Install php
description: Setup PHP, with composer and extensions
inputs:
  shell:
    description: 'Shell to use'
    required: false
    default: bash
  php_version:
    description: 'PHP version'
    default: '7.4'
    required: true
runs:
  using: "composite"
  steps:
    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
      env:
        APP_ENV: "testing"
      with:
        php-version: ${{ inputs.php_version }}
        extensions: mbstring, dom, fileinfo, mysql, gd, curl, zip, sqlite, xml,
        ini-values: post_max_size=2560M, max_execution_time=1800, memory_limit=2560M,
    - name: zstd act workaround
      run: sudo apt install zstd
      shell: bash
    - name: google-chrome install
      run: |
        sleep 3
        sudo apt-get install libxss1 libnss3 libappindicator1 libindicator7 libxpm4 libxrender1 libgtk2.0-0 libnss3 libgconf-2-4
        sudo apt-get install xvfb gtk2-engines-pixbuf
        sudo apt-get install xfonts-cyrillic xfonts-100dpi xfonts-75dpi xfonts-base xfonts-scalable
        sleep 3
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo apt-get install -f
        sudo dpkg -i google-chrome*.deb
      shell: bash
    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      shell: bash
    - name: Cache composer dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        # Use composer.json for key, if composer.lock is not committed.
        # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader
      shell: bash
    - name: Install Chrome Driver
      run: php artisan dusk:install
      shell: bash
    - name: Dusk updater install
      run: |
        composer require --dev staudenmeir/dusk-updater
        php artisan package:discover --ansi
      shell: bash
    - name: Dusk update
      run: php artisan dusk:update
      shell: bash
    - name: Copy env
      run: |
        cp --force /home/runner/work/microweber/microweber/.env.testing /home/runner/work/microweber/microweber/.env
        chmod 777 /home/runner/work/microweber/microweber/.env
        chmod 777 /home/runner/work/microweber/microweber/storage/
        sudo php artisan config:clear
        sudo php artisan optimize:clear
      shell: bash
    - name: Start Chrome Driver
      run: |
        vendor/laravel/dusk/bin/chromedriver-linux --version
        vendor/laravel/dusk/bin/chromedriver-linux > /dev/null 2>&1 &
      shell: bash
